/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define BASE 0
#define SYM 1
#define NAV 2
#define NUM 3
#define CONF 4

// Custom
#define MAC_LOCK LG(LC(Q))
#define MAC_MUTE F10

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
    quick-tap-ms = <150>;
};

/ {

    combos {
        compatible = "zmk,combos";
        // shifted number row
        combo_exclam {
            timeout-ms = <50>;
            key-positions = <0 10>;
            layers = <BASE SYM NUM>;
            bindings = <&kp EXCL>;
        };
        combo_at {
            timeout-ms = <50>;
            key-positions = <1 11>;
            layers = <BASE SYM NUM>;
            bindings = <&kp AT>;
        };
        combo_hash {
            timeout-ms = <50>;
            key-positions = <2 12>;
            layers = <BASE SYM NUM>;
            bindings = <&kp HASH>;
        };
        combo_dollar {
            timeout-ms = <50>;
            key-positions = <3 13>;
            layers = <BASE SYM NUM>;
            bindings = <&kp DLLR>;
        };
        combo_perc {
            timeout-ms = <50>;
            key-positions = <4 14>;
            layers = <BASE SYM NUM>;
            bindings = <&kp PRCNT>;
        };
        combo_caret {
            timeout-ms = <50>;
            key-positions = <5 15>;
            layers = <BASE SYM NUM>;
            bindings = <&kp CARET>;
        };
        combo_amps {
            timeout-ms = <50>;
            key-positions = <6 16>;
            layers = <BASE SYM NUM>;
            bindings = <&kp AMPS>;
        };
        combo_astrk {
            timeout-ms = <50>;
            key-positions = <7 17>;
            layers = <BASE SYM NUM>;
            bindings = <&kp ASTRK>;
        };
        combo_lparen {
            timeout-ms = <50>;
            key-positions = <8 18>;
            layers = <BASE SYM NUM>;
            bindings = <&kp LPAR>;
        };
        combo_rparen {
            timeout-ms = <50>;
            key-positions = <9 19>;
            layers = <BASE SYM NUM>;
            bindings = <&kp RPAR>;
        };
        // additional symbols
        combo_l_grave {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <BASE SYM NUM>;
            bindings = <&kp GRAVE>;
        };
        combo_l_0 {
            timeout-ms = <50>;
            key-positions = <10 20>;
            layers = <BASE>;
            bindings = <&kp N0>;
        };
        combo_l_1 {
            timeout-ms = <50>;
            key-positions = <11 21>;
            layers = <BASE>;
            bindings = <&kp N1>;
        };
        combo_l_2 {
            timeout-ms = <50>;
            key-positions = <12 22>;
            layers = <BASE>;
            bindings = <&kp N2>;
        };
        combo_l_3 {
            timeout-ms = <50>;
            key-positions = <13 23>;
            layers = <BASE>;
            bindings = <&kp N3>;
        };
        combo_l_9 {
            timeout-ms = <50>;
            key-positions = <14 24>;
            layers = <BASE>;
            bindings = <&kp N9>;
        };
        combo_r_colon {
            timeout-ms = <50>;
            key-positions = <8 9>;
            layers = <BASE SYM NUM>;
            bindings = <&kp COLON>;
        };
        combo_r_plus_h {
            timeout-ms = <15>;
            key-positions = <15 16>;
            layers = <BASE SYM NUM>;
            bindings = <&kp PLUS>;
        };
        combo_r_minus_h {
            timeout-ms = <15>;
            key-positions = <16 17>;
            layers = <BASE SYM NUM>;
            bindings = <&kp MINUS>;
        };
        combo_r_equal_h {
            timeout-ms = <15>;
            key-positions = <17 18>;
            layers = <BASE SYM NUM>;
            bindings = <&kp EQUAL>;
        };
        combo_r_double_quote {
            timeout-ms = <15>;
            key-positions = <18 19>;
            layers = <BASE SYM NUM>;
            bindings = <&kp DQT>;
        };
        combo_r_tilde {
            timeout-ms = <20>;
            key-positions = <27 28>;
            layers = <BASE SYM NUM>;
            bindings = <&kp TILDE>;
        };
        combo_r_qmark {
            timeout-ms = <20>;
            key-positions = <28 29>;
            layers = <BASE SYM NUM>;
            bindings = <&kp QMARK>;
        };
        combo_r_bslh {
            timeout-ms = <20>;
            key-positions = <15 25>;
            layers = <BASE SYM NUM>;
            bindings = <&kp BSLH>;
        };
        combo_r_pipe {
            timeout-ms = <50>;
            key-positions = <16 26>;
            layers = <BASE SYM NUM>;
            bindings = <&kp PIPE>;
        };
        // misc modifiers and whitespace
        combo_l_del {
            timeout-ms = <50>;
            key-positions = <3 4>;
            layers = <BASE SYM NUM>;
            bindings = <&kp DEL>;
        };
        combo_r_del {
            timeout-ms = <50>;
            key-positions = <5 6>;
            layers = <BASE SYM NUM>;
            bindings = <&kp DEL>;
        };
        combo_l_bksp {
            timeout-ms = <50>;
            key-positions = <13 14>;
            layers = <BASE SYM NUM>;
            bindings = <&kp BSPC>;
        };
        combo_l_cmd_tab {
            timeout-ms = <25>;
            key-positions = <20 21>;
            layers = <BASE>;
            bindings = <&kp LG(TAB)>;
        };
        combo_l_shift_tab {
            timeout-ms = <50>;
            key-positions = <21 22>;
            layers = <BASE SYM NUM>;
            bindings = <&kp LS(TAB)>;
        };
        combo_l_tab {
            timeout-ms = <50>;
            key-positions = <22 23>;
            layers = <BASE SYM NUM>;
            bindings = <&kp TAB>;
        };
        combo_l_ent {
            timeout-ms = <50>;
            key-positions = <23 24>;
            layers = <BASE SYM NUM>;
            bindings = <&kp RET>;
        };
        combo_r_ent {
            timeout-ms = <75>;
            key-positions = <26 27>;
            layers = <BASE SYM NUM>;
            bindings = <&kp RET>;
        };
    };

    behaviors {
        mth: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_HOLD_PREF";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        mtb: mod_tap_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_BALANCED";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <400>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
        lth: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_HOLD_PREF";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q        &kp W  &kp F  &kp P  &kp G    &kp J  &kp L  &kp U      &kp Y    &kp SEMI
&kp A        &kp R  &kp S  &kp T  &kp D    &kp H  &kp N  &kp E      &kp I    &kp O
&mtb LALT Z  &kp X  &kp C  &kp V  &kp B    &kp K  &kp M  &kp COMMA  &kp DOT  &lt NAV SLASH

&kp LSHFT  &mth LCMD ESC                   &lth SYM BSPC  &mt LCTRL SPACE
            >;
        };

        symbol_layer {
            bindings = <
&kp TAB       &kp N7  &kp N8  &kp N9  &kp PRCNT    &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp COLON
&mt LCTRL N0  &kp N4  &kp N5  &kp N6  &kp PIPE     &kp GRAVE  &kp MINUS  &kp LBKT  &kp RBKT  &kp SQT
&mt LALT N0   &kp N1  &kp N2  &kp N3  &kp EXCL     &kp BSLH   &kp EQUAL  &kp LT    &kp GT    &trans

&mt LSHFT SPACE  &mt LCMD N0                       &trans  &kp LCTRL
            >;
        };

        navigation_layer {
            bindings = <
&none          &none     &none     &none      &none      &none     &kp HOME  &kp UP     &kp END    &kp MAC_LOCK
&mt LCTRL ESC  &kp RALT  &kp LCMD  &kp LSHFT  &kp DEL    &kp BSPC  &kp LEFT  &kp DOWN   &kp RIGHT  &none
&mo CONF       &none     &none     &none      &none      &none     &kp RET   &kp PG_UP  &kp PG_DN  &trans

&mt LSHFT SPACE  &kp LCMD                                &mo NUM  &mt LCTRL SPACE
            >;
        };

        number_layer {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4     &kp F5     &kp TAB      &kp N7  &kp N8  &kp N9  &kp COLON
&kp LCTRL  &kp RALT  &kp LCMD  &kp LSHFT  &kp DEL    &kp MINUS    &kp N4  &kp N5  &kp N6  &kp N0
&kp F6     &kp F7    &kp F8    &kp F9     &kp F10    &kp LS(TAB)  &kp N1  &kp N2  &kp N3  &kp SLASH

&kp LSHFT &kp LCMD                                   &trans  &mt LSHFT SPACE
            >;
        };

        configuration_layer {
            bindings = <
&bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5    &none         &none         &none         &none  &none
&none          &none         &none         &none         &bt BT_CLR      &kp C_BRI_UP  &kp C_VOL_UP  &kp MAC_MUTE  &none  &none
&trans         &none         &none         &none         &none           &kp C_BRI_DN  &kp C_VOL_DN  &kp C_PP      &none  &none

&none  &bootloader                                                       &bootloader  &none
            >;
        };
    };
};
